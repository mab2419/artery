[General]
network = artery.inet.World

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.launcher.sumocfg = "highway.sumocfg"

*.node[*].middleware.updateInterval = 0.1s
*.node[*].middleware.datetime = "2018-03-19 10:00:00"
*.node[*].middleware.services = xmldoc("services.xml")

*.node[*].posX.result-recording-modes = vector
*.node[*].posY.result-recording-modes = vector


#Ausgabe in Sqlite Format:
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

[Config sumo-gui]
*.traci.launcher.sumo = "sumo-gui"

[Config storyboard]
*.withStoryboard = true
*.storyboard.python = "story"
*.node[*].middleware.services = xmldoc("services-storyboard.xml")

[Config inet]
network = artery.inet.World

*.node[*].wlan[*].typename = "VanetNic"
*.node[*].wlan[*].radio.channelNumber = 180
*.node[*].wlan[*].radio.carrierFrequency = 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power = 200 mW

*.node[*].middleware.updateInterval = 0.1s
*.node[*].middleware.datetime = "2018-03-19 12:35:00"
*.node[*].middleware.services = xmldoc("services.xml")
*.node[*].posX.result-recording-modes = vector
*.node[*].posY.result-recording-modes = vector
*.node[*].middleware.CA.reception.result-recording-modes = all
*.node[*].middleware.CA.transmission.result-recording-modes = all
*.node[*].wlan[*].mac.rx.ChannelLoad_mean.result-recording-modes = all
*.node[*].wlan[*].mac.rx.ChannelLoad_tx.result-recording-modes = all
#*.node[*].wlan[*].mac.rx.cbrWithTx = true
#Ausgabe in Sqlite Format:
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

[Config envmod]
extends = inet, sumo-gui
network = artery.envmod.World
*.traci.mapper.vehicleType = "artery.envmod.Car"
*.node[*].middleware.services = xmldoc("services-envmod.xml")
*.node[*].environmentModel.sensors = xmldoc("sensors.xml")
*.node[4].environmentModel.FrontRadar.fovRange = 200.0 m
*.node[4].environmentModel.FrontRadar.fovAngle = 20.0
**.identityRegistryModule = "idRegistry"
*.environmentModel.drawObstacles = true
*.environmentModel.drawVehicles = true
*.environmentModel.obstacleTypes = "building shop"
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"
*.node[*].environmentModel.*.drawSensorCone = true
*.node[*].environmentModel.*.drawLinesOfSight = true
*.node[*].environmentModel.*.drawDetectedObjects = true
*.node[*].environmentModel.*.drawBlockingObstacles = true



[Config storyboard-gui]
extends = storyboard, sumo-gui
